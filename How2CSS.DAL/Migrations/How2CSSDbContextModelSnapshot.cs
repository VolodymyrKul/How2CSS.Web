// <auto-generated />
using System;
using How2CSS.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace How2CSS.DAL.Migrations
{
    [DbContext(typeof(How2CSSDbContext))]
    partial class How2CSSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("How2CSS.Core.Models.AchievementData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id_AchievementData");

                    b.Property<int>("CompletedCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CorrectCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentMark")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUserAchievement")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TryCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id")
                        .HasName("XPKAchievementData");

                    b.HasIndex("IdUserAchievement");

                    b.ToTable("AchievementDatas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompletedCount = 15,
                            CorrectCount = 12,
                            CurrentMark = 24,
                            IdUserAchievement = 1,
                            TryCount = 1
                        },
                        new
                        {
                            Id = 2,
                            CompletedCount = 18,
                            CorrectCount = 15,
                            CurrentMark = 30,
                            IdUserAchievement = 1,
                            TryCount = 2
                        },
                        new
                        {
                            Id = 3,
                            CompletedCount = 21,
                            CorrectCount = 18,
                            CurrentMark = 36,
                            IdUserAchievement = 1,
                            TryCount = 3
                        },
                        new
                        {
                            Id = 4,
                            CompletedCount = 17,
                            CorrectCount = 14,
                            CurrentMark = 28,
                            IdUserAchievement = 2,
                            TryCount = 1
                        },
                        new
                        {
                            Id = 5,
                            CompletedCount = 20,
                            CorrectCount = 17,
                            CurrentMark = 34,
                            IdUserAchievement = 2,
                            TryCount = 2
                        },
                        new
                        {
                            Id = 6,
                            CompletedCount = 23,
                            CorrectCount = 20,
                            CurrentMark = 40,
                            IdUserAchievement = 2,
                            TryCount = 3
                        },
                        new
                        {
                            Id = 7,
                            CompletedCount = 19,
                            CorrectCount = 16,
                            CurrentMark = 32,
                            IdUserAchievement = 3,
                            TryCount = 1
                        },
                        new
                        {
                            Id = 8,
                            CompletedCount = 22,
                            CorrectCount = 19,
                            CurrentMark = 38,
                            IdUserAchievement = 3,
                            TryCount = 2
                        },
                        new
                        {
                            Id = 9,
                            CompletedCount = 25,
                            CorrectCount = 22,
                            CurrentMark = 44,
                            IdUserAchievement = 3,
                            TryCount = 3
                        },
                        new
                        {
                            Id = 10,
                            CompletedCount = 21,
                            CorrectCount = 18,
                            CurrentMark = 36,
                            IdUserAchievement = 4,
                            TryCount = 1
                        },
                        new
                        {
                            Id = 11,
                            CompletedCount = 24,
                            CorrectCount = 21,
                            CurrentMark = 42,
                            IdUserAchievement = 4,
                            TryCount = 2
                        },
                        new
                        {
                            Id = 12,
                            CompletedCount = 27,
                            CorrectCount = 24,
                            CurrentMark = 48,
                            IdUserAchievement = 4,
                            TryCount = 3
                        },
                        new
                        {
                            Id = 13,
                            CompletedCount = 23,
                            CorrectCount = 20,
                            CurrentMark = 40,
                            IdUserAchievement = 5,
                            TryCount = 1
                        },
                        new
                        {
                            Id = 14,
                            CompletedCount = 26,
                            CorrectCount = 23,
                            CurrentMark = 46,
                            IdUserAchievement = 5,
                            TryCount = 2
                        },
                        new
                        {
                            Id = 15,
                            CompletedCount = 29,
                            CorrectCount = 26,
                            CurrentMark = 52,
                            IdUserAchievement = 5,
                            TryCount = 3
                        },
                        new
                        {
                            Id = 16,
                            CompletedCount = 16,
                            CorrectCount = 11,
                            CurrentMark = 22,
                            IdUserAchievement = 6,
                            TryCount = 1
                        },
                        new
                        {
                            Id = 17,
                            CompletedCount = 19,
                            CorrectCount = 14,
                            CurrentMark = 28,
                            IdUserAchievement = 6,
                            TryCount = 2
                        },
                        new
                        {
                            Id = 18,
                            CompletedCount = 22,
                            CorrectCount = 17,
                            CurrentMark = 34,
                            IdUserAchievement = 6,
                            TryCount = 3
                        },
                        new
                        {
                            Id = 19,
                            CompletedCount = 18,
                            CorrectCount = 13,
                            CurrentMark = 26,
                            IdUserAchievement = 7,
                            TryCount = 1
                        },
                        new
                        {
                            Id = 20,
                            CompletedCount = 21,
                            CorrectCount = 16,
                            CurrentMark = 32,
                            IdUserAchievement = 7,
                            TryCount = 2
                        },
                        new
                        {
                            Id = 21,
                            CompletedCount = 24,
                            CorrectCount = 19,
                            CurrentMark = 38,
                            IdUserAchievement = 7,
                            TryCount = 3
                        },
                        new
                        {
                            Id = 22,
                            CompletedCount = 20,
                            CorrectCount = 15,
                            CurrentMark = 30,
                            IdUserAchievement = 8,
                            TryCount = 1
                        },
                        new
                        {
                            Id = 23,
                            CompletedCount = 23,
                            CorrectCount = 18,
                            CurrentMark = 36,
                            IdUserAchievement = 8,
                            TryCount = 2
                        },
                        new
                        {
                            Id = 24,
                            CompletedCount = 26,
                            CorrectCount = 21,
                            CurrentMark = 42,
                            IdUserAchievement = 8,
                            TryCount = 3
                        },
                        new
                        {
                            Id = 25,
                            CompletedCount = 22,
                            CorrectCount = 17,
                            CurrentMark = 34,
                            IdUserAchievement = 9,
                            TryCount = 1
                        },
                        new
                        {
                            Id = 26,
                            CompletedCount = 25,
                            CorrectCount = 20,
                            CurrentMark = 40,
                            IdUserAchievement = 9,
                            TryCount = 2
                        },
                        new
                        {
                            Id = 27,
                            CompletedCount = 28,
                            CorrectCount = 23,
                            CurrentMark = 46,
                            IdUserAchievement = 9,
                            TryCount = 3
                        },
                        new
                        {
                            Id = 28,
                            CompletedCount = 24,
                            CorrectCount = 19,
                            CurrentMark = 38,
                            IdUserAchievement = 10,
                            TryCount = 1
                        },
                        new
                        {
                            Id = 29,
                            CompletedCount = 27,
                            CorrectCount = 22,
                            CurrentMark = 44,
                            IdUserAchievement = 10,
                            TryCount = 2
                        },
                        new
                        {
                            Id = 30,
                            CompletedCount = 30,
                            CorrectCount = 25,
                            CurrentMark = 50,
                            IdUserAchievement = 10,
                            TryCount = 3
                        });
                });

            modelBuilder.Entity("How2CSS.Core.Models.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id_Level");

                    b.Property<int>("TasksCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("XPKLevel");

                    b.ToTable("Levels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TasksCount = 30,
                            Title = "CSS_Part1"
                        },
                        new
                        {
                            Id = 2,
                            TasksCount = 30,
                            Title = "CSS_Part2"
                        },
                        new
                        {
                            Id = 3,
                            TasksCount = 30,
                            Title = "CSS_Part3"
                        },
                        new
                        {
                            Id = 4,
                            TasksCount = 30,
                            Title = "CSS_Part4"
                        },
                        new
                        {
                            Id = 5,
                            TasksCount = 30,
                            Title = "CSS_Part5"
                        });
                });

            modelBuilder.Entity("How2CSS.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id_User");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("XPKUser");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ilivocs@gmail.com",
                            FirstName = "Oksana",
                            LastName = "Iliv",
                            Password = "_Aa123456",
                            Phone = "0123456789",
                            Role = "User"
                        },
                        new
                        {
                            Id = 2,
                            Email = "turyanmykh@gmail.com",
                            FirstName = "Mykhailo",
                            LastName = "Turianskyi",
                            Password = "_Aa123456",
                            Phone = "1234567890",
                            Role = "User"
                        },
                        new
                        {
                            Id = 3,
                            Email = "stasenoleks@gmail.com",
                            FirstName = "Oleksandr",
                            LastName = "Stasenko",
                            Password = "_Aa123456",
                            Phone = "2345678901",
                            Role = "User"
                        },
                        new
                        {
                            Id = 4,
                            Email = "pynzynyura@gmail.com",
                            FirstName = "Yurii",
                            LastName = "Pynzyn",
                            Password = "_Aa123456",
                            Phone = "3456789012",
                            Role = "User"
                        },
                        new
                        {
                            Id = 5,
                            Email = "hladyoandr@gmail.com",
                            FirstName = "Andrii",
                            LastName = "Hlado",
                            Password = "_Aa123456",
                            Phone = "4567890123",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("How2CSS.Core.Models.UserAchievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id_UserAchievement");

                    b.Property<int>("IdLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUser")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SaveDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("XPKUserAchievement");

                    b.HasIndex("IdLevel");

                    b.HasIndex("IdUser");

                    b.ToTable("UserAchievements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdLevel = 1,
                            IdUser = 1,
                            Notes = "Need to learn margin",
                            SaveDate = new DateTime(2020, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task1 Achivement"
                        },
                        new
                        {
                            Id = 2,
                            IdLevel = 2,
                            IdUser = 1,
                            Notes = "Need to learn padding",
                            SaveDate = new DateTime(2020, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task2 Achivement"
                        },
                        new
                        {
                            Id = 3,
                            IdLevel = 3,
                            IdUser = 1,
                            Notes = "Need to learn border",
                            SaveDate = new DateTime(2020, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task3 Achivement"
                        },
                        new
                        {
                            Id = 4,
                            IdLevel = 4,
                            IdUser = 1,
                            Notes = "Need to learn links",
                            SaveDate = new DateTime(2020, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task4 Achivement"
                        },
                        new
                        {
                            Id = 5,
                            IdLevel = 5,
                            IdUser = 1,
                            Notes = "Need to learn tables",
                            SaveDate = new DateTime(2020, 12, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task5 Achivement"
                        },
                        new
                        {
                            Id = 6,
                            IdLevel = 1,
                            IdUser = 2,
                            Notes = "Need to learn position",
                            SaveDate = new DateTime(2020, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task1 Achivement"
                        },
                        new
                        {
                            Id = 7,
                            IdLevel = 2,
                            IdUser = 2,
                            Notes = "Need to learn float",
                            SaveDate = new DateTime(2020, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task2 Achivement"
                        },
                        new
                        {
                            Id = 8,
                            IdLevel = 3,
                            IdUser = 2,
                            Notes = "Need to learn align",
                            SaveDate = new DateTime(2020, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task3 Achivement"
                        },
                        new
                        {
                            Id = 9,
                            IdLevel = 4,
                            IdUser = 2,
                            Notes = "Need to learn opacity",
                            SaveDate = new DateTime(2020, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task4 Achivement"
                        },
                        new
                        {
                            Id = 10,
                            IdLevel = 5,
                            IdUser = 2,
                            Notes = "Need to learn forms",
                            SaveDate = new DateTime(2020, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task5 Achivement"
                        });
                });

            modelBuilder.Entity("How2CSS.Core.Models.AchievementData", b =>
                {
                    b.HasOne("How2CSS.Core.Models.UserAchievement", "IdUserAchievementNavigation")
                        .WithMany("AchievementDatas")
                        .HasForeignKey("IdUserAchievement")
                        .HasConstraintName("R_2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUserAchievementNavigation");
                });

            modelBuilder.Entity("How2CSS.Core.Models.UserAchievement", b =>
                {
                    b.HasOne("How2CSS.Core.Models.Level", "IdLevelNavigation")
                        .WithMany("UserAchievements")
                        .HasForeignKey("IdLevel")
                        .HasConstraintName("R_3")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("How2CSS.Core.Models.User", "IdUserNavigation")
                        .WithMany("UserAchievements")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("R_1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdLevelNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("How2CSS.Core.Models.Level", b =>
                {
                    b.Navigation("UserAchievements");
                });

            modelBuilder.Entity("How2CSS.Core.Models.User", b =>
                {
                    b.Navigation("UserAchievements");
                });

            modelBuilder.Entity("How2CSS.Core.Models.UserAchievement", b =>
                {
                    b.Navigation("AchievementDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
